version: 0.2
env:
  variables:
    ECR_REPO_NAME: java-demo-git
  secret-manager:
    DOCKERHUB_TOKEN: java-cicd:DOCKERHUB_TOKEN
    DOCKERHUB_USER: java-cicd:DOCKERHUB_USER
phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - mvn clean install
      - echo "Logging in to Amazon ECR..."
      - aws ecr-public get-login-password --region us-east-1 | docker login -u AWS --password-stdin public.ecr.aws
      # - ECR_MAIN_URI= "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - ECR_MAIN_URI="252007810724.dkr.ecr.ap-south-1.amazonaws.com"
      - aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin 252007810724.dkr.ecr.us-east-1.amazonaws.com
      - ECR_IMAGE_URI="252007810724.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPO_NAME}:latest"
      - echo "installing docker"
      - sudo apt-get update -y
      - sudo apt-get install ca-certificates curl gnupg
      - sudo install -m 0755 -d /etc/apt/keyrings
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - sudo chmod a+r /etc/apt/keyrings/docker.gpg
      - echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \ "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      #- sudo apt-get update -y
      - sudo apt-get install -y docker-ce
      - sudo apt-get install -y containerd.io 
      - sudo apt-get install -y docker-buildx-plugin docker-compose-plugin 
      - sudo apt-get install docker -y 
      - echo "installation successfull"
      - sudo apt-get update -y
      - sudo service docker start
  build:
    commands:
      - docker build -t java-tomcat:latest .
      - docker tag java-tomcat:latest ${ECR_IMAGE_URI}
  post_build:
    commands:
      - echo "Pushing the Docker image to Amazon ECR..."
      - docker push ${ECR_IMAGE_URI}
      - printf '[{"name":"angular-app","imageUri":"%s"}]' ${ECR_IMAGE_URI} > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
