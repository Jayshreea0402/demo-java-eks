version: 0.2
env:
  variables:
    ECR_REPO_NAME: java-demo-git
    #AWS_ACCOUNT_ID: 252007810724
    #AWS_REGION: ap-south-1

  secret-manager:
    DOCKERHUB_TOKEN: java-cicd-pmg:token
    DOCKERHUB_USER: java-cicd-pmg:user
phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
        - wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        - sudo apt update && sudo apt install terraform
      # - wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
      # - unzip terraform_1.0.0_linux_amd64.zip
      # - mv terraform /usr/local/bin/
      # - terraform --version
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/m6r4f3q8
      #- aws ecr-public get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 252007810724.dkr.ecr.eu-west-2.amazonaws.com
      - echo "logging to ECR"
      #- aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 252007810724.dkr.ecr.ap-south-1.amazonaws.com
      - ECR_MAIN_URI="252007810724.dkr.ecr.eu-west-2.amazonaws.com"
      #- aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin ${ECR_MAIN_URI}
      - echo "Login successfull..."
      #- cp deployment.yaml $CODEBUILD_SRC_DIR
    
  build:
    commands: 
      #- chmod +x check_changes.sh
      # - ./check_changes.sh
      # - if [ $? -eq 0 ]; then
      - terraform init
      - terraform apply -auto-approve
        # else
        #   echo "No changes in Terraform templates. Skipping Terraform deployment."
        # fi
      - ECR_IMAGE_URI="252007810724.dkr.ecr.eu-west-2.amazonaws.com/$ECR_REPO_NAME:latest"
      - echo "building docker image..."
      - docker build .
      # - docker tag java-demo-eks:latest public.ecr.aws/m6r4f3q8/java-demo-eks:latest
      #- git checkout master
      # - terraform init
      # - terraform apply -auto-approve
      - docker tag java-demo-git:latest 252007810724.dkr.ecr.ap-south-1.amazonaws.com/java-demo-git:latest
      #- docker tag java-demo-git:latest 252007810724.dkr.ecr.eu-west-1.amazonaws.com/java-demo-git:latest
  post_build:
    commands:
      - echo "pushing image to ECR"
      #- docker push 252007810724.dkr.ecr.ap-south-1.amazonaws.com/java-demo-git:latest
      - docker push public.ecr.aws/m6r4f3q8/java-demo-git:latest
      #- docker push 252007810724.dkr.ecr.eu-west-1.amazonaws.com/java-demo-git:latest
      - echo "successfully pushed image... check ECR repo"
      - echo '[{"name":"java-demo-git","imageUri":"%s"}]' ${ECR_IMAGE_URI} > imagedefinitions.json
      - aws eks update-kubeconfig --name pmg-deploy-eks --region ap-south-1
      - kubectl apply -f $CODEBUILD_SRC_DIR/deployment.yaml
artifacts:
  files:
    - imagedefinitions.json
